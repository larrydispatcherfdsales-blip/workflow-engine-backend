name: BPO WorkFlow Engine

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        type: choice
        options: [fetch_task, submit_for_qc, approve_qc, reject_qc]
      task_path:
        description: 'Path of the task to act on'
        required: false
      form_data_json:
        description: 'JSON data from the agent form'
        required: false

jobs:
  manage_tasks:
    runs-on: ubuntu-latest
    outputs:
      fetched_task_path: ${{ steps.perform_action.outputs.new_task_path }}

    steps:
      - name: Checkout DB Repo
        uses: actions/checkout@v4
        with:
          repository: larrydispatcherfdsales-blip/workflow-engine-db
          path: db
          token: ${{ secrets.DB_ACCESS_TOKEN }}
          ref: main

      - name: Perform Action and Push Changes
        id: perform_action
        working-directory: ./db
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions-bot@github.com"

          ACTION=${{ github.event.inputs.action }}
          TASK_PATH=${{ github.event.inputs.task_path }}

          echo "Performing action: $ACTION"

          if [ "$ACTION" == "fetch_task" ]; then
            TASK_TO_FETCH=$(find tasks/todo -type f -name "*.txt" | head -n 1)
            if [ -z "$TASK_TO_FETCH" ]; then echo "No tasks to fetch."; exit 0; fi
            mkdir -p tasks/inprogress
            NEW_PATH="tasks/inprogress/$(basename $TASK_TO_FETCH)"
            git mv "$TASK_TO_FETCH" "$NEW_PATH"
            echo "new_task_path=$NEW_PATH" >> $GITHUB_OUTPUT

          elif [ "$ACTION" == "submit_for_qc" ]; then
            if [ -z "$TASK_PATH" ]; then echo "Error: task_path is required."; exit 1; fi
            
            # --- YEH NAYA HISSA HAI ---
            # Agent ke form data ko ek alag file mein save karna
            if [[ "${{ github.event.inputs.form_data_json }}" != "{}" && "${{ github.event.inputs.form_data_json }}" != "" ]]; then
              mkdir -p data
              TASK_BASENAME=$(basename "$TASK_PATH" .txt)
              echo '${{ github.event.inputs.form_data_json }}' > "data/${TASK_BASENAME}_data.json"
            fi
            
            mkdir -p tasks/in_qc
            NEW_PATH="tasks/in_qc/$(basename $TASK_PATH)"
            git mv "$TASK_PATH" "$NEW_PATH"
          
          # (approve_qc aur reject_qc ka logic waisa hi rahega)
          elif [ "$ACTION" == "approve_qc" ]; then
            if [ -z "$TASK_PATH" ]; then echo "Error: task_path is required."; exit 1; fi
            mkdir -p tasks/completed
            NEW_PATH="tasks/completed/$(basename $TASK_PATH)"
            git mv "$TASK_PATH" "$NEW_PATH"

          elif [ "$ACTION" == "reject_qc" ]; then
            if [ -z "$TASK_PATH" ]; then echo "Error: task_path is required."; exit 1; fi
            mkdir -p tasks/todo
            NEW_PATH="tasks/todo/$(basename $TASK_PATH)"
            git mv "$TASK_PATH" "$NEW_PATH"
          fi

          git add .
          if ! git diff --staged --quiet; then
            git commit -m "Workflow: Performed '$ACTION'"
            git push origin main
          else
            echo "No changes to commit."
          fi
