name: BPO WorkFlow Engine

on:
  workflow_dispatch:
    inputs:
      client_folder:
        description: 'The folder name of the client (e.g., client_A_demo)'
        required: true
      action:
        description: 'Action to perform'
        required: true
      task_path:
        description: 'Path of the task to act on'
        required: false
      form_data_json:
        description: 'JSON string of the data entered by the agent'
        required: false
  repository_dispatch:
    types: [post-ai-qc-action]

jobs:
  manage_tasks:
    runs-on: ubuntu-latest
    outputs:
      fetched_task_path: ${{ steps.perform_action.outputs.new_task_path }}

    steps:
      - name: Checkout DB Repo
        uses: actions/checkout@v4
        with:
          repository: larrydispatcherfdsales-blip/workflow-engine-db
          path: db
          token: ${{ secrets.DB_ACCESS_TOKEN }}
          ref: main

      - name: Perform Action and Push Changes
        id: perform_action
        working-directory: ./db
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions-bot@github.com"

          if [ "${{ github.event_name }}" == "repository_dispatch" ]; then
            CLIENT_FOLDER=${{ github.event.client_payload.client_folder }}
            TASK_PATH=${{ github.event.client_payload.task_path }}
            QC_STATUS=${{ github.event.client_payload.qc_status }}
            ACTION="ai_qc_result"
          else
            CLIENT_FOLDER=${{ github.event.inputs.client_folder }}
            ACTION=${{ github.event.inputs.action }}
            TASK_PATH=${{ github.event.inputs.task_path }}
            FORM_DATA=${{ github.event.inputs.form_data_json }}
          fi

          echo "Processing for client: $CLIENT_FOLDER | Action: $ACTION"

          if [ "$ACTION" == "fetch_task" ]; then
            TASK_TO_FETCH=$(find "$CLIENT_FOLDER/tasks/todo" -type f -name "*.txt" | head -n 1)
            if [ -z "$TASK_TO_FETCH" ]; then echo "No tasks to fetch for $CLIENT_FOLDER."; exit 0; fi
            mkdir -p "$CLIENT_FOLDER/tasks/inprogress"
            NEW_PATH="$CLIENT_FOLDER/tasks/inprogress/$(basename $TASK_TO_FETCH)"
            git mv "$TASK_TO_FETCH" "$NEW_PATH"
            echo "new_task_path=$NEW_PATH" >> $GITHUB_OUTPUT
          elif [ "$ACTION" == "submit_for_qc" ]; then
            if [ -z "$TASK_PATH" ]; then echo "Error: task_path is required."; exit 1; fi
            if [[ ! -z "$FORM_DATA" && "$FORM_DATA" != "{}" ]]; then
              mkdir -p "$CLIENT_FOLDER/data"
              DATA_FILE_NAME=$(basename "$TASK_PATH" .txt).json
              echo "$FORM_DATA" > "$CLIENT_FOLDER/data/$DATA_FILE_NAME"
            fi
          elif [ "$ACTION" == "ai_qc_result" ]; then
            if [ "$QC_STATUS" == "passed" ]; then
              mkdir -p "$CLIENT_FOLDER/tasks/completed"
              NEW_PATH="$CLIENT_FOLDER/tasks/completed/$(basename $TASK_PATH)"
              git mv "$TASK_PATH" "$NEW_PATH"
            else
              mkdir -p "$CLIENT_FOLDER/tasks/todo"
              NEW_PATH="$CLIENT_FOLDER/tasks/todo/$(basename $TASK_PATH)"
              git mv "$TASK_PATH" "$NEW_PATH"
            fi
          fi

          git add .
          if ! git diff --staged --quiet; then
            git commit -m "Workflow: Processed task for $CLIENT_FOLDER"
            git push origin main
          else
            echo "No changes to commit."
          fi
